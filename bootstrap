#!/bin/bash

###Functions
# Function to determine the Linux distribution
detect_distro() {
    if [ -f /etc/os-release ]; then
        # Read the distribution information from /etc/os-release
        . /etc/os-release
        DISTRO=$NAME
        DISTRO_VERSION=$VERSION_ID
    elif [ -f /etc/lsb-release ]; then
        # Read the distribution information from /etc/lsb-release
        . /etc/lsb-release
        DISTRO=$DISTRIB_ID
        DISTRO_VERSION=$DISTRIB_RELEASE
    elif [ -f /etc/debian_version ]; then
        DISTRO="Debian"
        DISTRO_VERSION=$(cat /etc/debian_version)
    elif [ -f /etc/redhat-release ]; then
        DISTRO=$(cat /etc/redhat-release)
        DISTRO_VERSION=$(cat /etc/redhat-release | grep -oP '\d+(\.\d+)?')
    else
        DISTRO="Unknown"
        DISTRO_VERSION="Unknown"
    fi
    echo "Detected Linux distribution: $DISTRO"
    echo "Detected distro version: $DISTRO_VERSION"
}

# Function to ask the user a yes/no question
ask_user() {
    while true; do
        read -p "$1 (Y/n): " yn
        yn=${yn:-y}
        case $yn in
            [Yy] ) return 0;;
            [Nn] ) return 1;;
            * ) echo "Please answer yes or no.";;
        esac
    done
}

# Function to get the current user
get_current_user() {
    CURRENT_USER=$(whoami)
    echo "Current user: $CURRENT_USER"
}


######################################### 
### Information gathering

# Execute the function to detect and print the distribution
detect_distro

# Execute the function to detect and print the current user
get_current_user

# Ask user if they want to delete ~/.config/plasma-localerc
if ask_user $'Do you want to delete the "~/.config/plasma-localerc" file?\nYou may need to do this so plasma uses the locale of your system, as defined in /etc/locale.conf'; then
    DELETE_PLASMA_LOCALERC=true
fi 

# Ask if user wants to be in wheel group (Necessary for sudo configuration)
if ask_user $'Add user \"$CURRENT_USER\" to group \"wheel\"?\nYou need to do this for the sudoers config to work.'; then
    # If user answers yes, add user to wheel group later
    USER_WHEEL=true
fi

# Ask if user wants to install the sudoers file
if ask_user "Do you want to install the sudoers file?"; then
    SUDOERS=true
fi

# Additional section for openSUSE
if [ "$DISTRO" = "openSUSE Leap" ] || [ "$DISTRO" = "openSUSE Tumbleweed" ]; then
    echo "This is openSUSE. Performing openSUSE-specific tasks..."
    # Add openSUSE-specific commands here
    if ask_user "Do you want to install packages?"; then
        # Store yes so the installations can all the done in the end
        SUSE_INSTALL=true
        if ask_user 'Do you want to add the noreply github email address to your gitconfig?'; then
            # If user answers yes, add the email to gitconfig
            GIT_CONFIG=true
        fi
        if ask_user "Do you want to install the fish config and fish aliases?"; then
            FISH_CONFIG=true
            FISH_SUSE=true
        fi
    fi
    else
        echo "Not installing packages."
    fi
    ## Packman codecs
    # Ask if the user wants to install packman repo and codecs
    if ask_user "Do you want to enable the packman repo and install codecs?"; then
        # If user answers yes, install packman and codecs
        SUSE_CODECS=true
    fi

    ## vscode
    # Ask if the user wants to install vscode from the obs
    if ask_user "Do you want to install vscode from the obs?"; then
            # Yes
            VSCODE_OBS=true
    fi
fi


## Ask the user if he wants to install obsidian
if ask_user "Do you want to install ObsidianMD as flatpak?"; then
    # Yes
    OBSIDIAN=true
fi

## Ask the user if he wants to install vesktop
if ask_user "Do you want to install Vesktop? (Alternate discord client)"; then
    # Yes
    VESKTOP=true
fi

#########################################
### Summary

######################################### 
### Installations

# Delete the plasma specific locale file so plasma uses the locales from /etc/locale.conf
if [ "$DELETE_PLASMA_LOCALERC" = true ]; then
    echo "Deleting plasma-localerc.."
    rm ~/.config/plasma-localerc
    echo "Deleted plasma-localerc"
fi

# Add user to wheel group
if [ "$USER_WHEEL" = true ]; then
    sudo usermod -a -G wheel $CURRENT_USER
    echo "Added user \"$CURRENT_USER\" to group \"wheel\"."
fi

# openSuse packages
echo "Installing programs now.."
if [ "$SUSE_INSTALL" = true ]; then
    echo "Installing openSuse packages.."
    sudo zypper install opi fish zoxide fzf fzf-fish-integration fastfetch steam flatpak flatpak-remote-flathub rclone yt-dlp
    echo "Installed openSuse packages."

    if [ "$GIT_CONFIG" = true ]; then
        git config --global user.email '171081467+blue-witcher@users.noreply.github.com'
        echo 'Added 171081467+blue-witcher@users.noreply.github.com to gitconfig'
    fi
fi

# fish config
if [ "$FISH_CONFIG" = true ]; then
    echo "Installing fish configs.."
    mkdir -p ~/.config/fish/functions
    cp fish/config.fish ~/.config/fish 
    echo "Installed fish config."
    # Install distro-independent functions V
    cp fish/functions/* ~/.config/fish/functions
    echo "Installed fish functions"
    # If on openSuse, install the openSuse-specific functions
    if [ "$FISH_SUSE" = true ]; then
        echo "Installing openSuse functions.."
        cp fish/functions/openSuse/* ~/.config/fish/functions
        echo "Installed openSuse functions."
    fi
fi

# openSuse packman codecs
if [ "$SUSE_CODECS" = true ]; then
    echo "Installing packman and codecs.."
    sudo opi codecs
    echo "Installed packman and codecs."
    echo "You may need to run \"zypper dup --from packman --allow-vendor-change\""
fi

# OBS vscode
if [ "$VSCODE_OBS = true" ]; then
    echo "Installing vscode.."
    if [ "$DISTRO" = "openSUSE Tumbleweed" ]; then
            echo "Installing vscode for openSuse Tumbleweed.."
            sudo zypper addrepo https://download.opensuse.org/repositories/devel:tools:ide:vscode/openSUSE_Tumbleweed/devel:tools:ide:vscode.repo
            sudo zypper refresh
            sudo zypper install code
        elif [ "$DISTRO" = "openSUSE Leap" ]; then
            echo "Installing vscode for openSuse Leap $DISTRO_VERSION.."
            zypper addrepo "https://download.opensuse.org/repositories/devel:tools:ide:vscode/$DISTRO_VERSION/devel:tools:ide:vscode.repo"
            zypper refresh
            zypper install code
    fi
    echo "Installed vscode."
fi

# Obsidian
if [ "$OBSIDIAN" = true ]; then
    echo "Installing Obsidian.."
    flatpak install flathub md.obsidian.Obsidian
    echo "Installed Obsidian."
fi

# Vesktop
if [ "$VESKTOP" = true ]; then
    echo "Installing Vesktop.."
    flatpak install flathub dev.vencord.Vesktop
    echo "Installed vesktop."
    echo "Remember to import your settings."
fi

# Install sudoers file
## This should be the last thing to be done before restarting.
if [ "$SUDOERS" = true ]; then
    echo "Installing sudoers file.."
    sudo cp sudoers /etc/sudoers
    # Maybe need to also manage file ownership after copy, like:
    # sudo chown root (idk syntax)
    # sudo chmod only root (idk syntax)
fi

############################

## Ask if the user wants to restart and remind him that he needs to restart for the sudo configuration to work
if ask_user "Do you want to reboot now? (You need to reboot to apply the locale and sudoers configurations)"; then
        # Yes
        echo "Rebooting.."
        systemctl reboot
    else
        # No
        echo "Script done."
fi