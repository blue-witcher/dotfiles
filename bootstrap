#!/bin/bash

###Functions
# Function to determine the Linux distribution
detect_distro() {
    if [ -f /etc/os-release ]; then
        # Read the distribution information from /etc/os-release
        . /etc/os-release
        DISTRO=$NAME
        DISTRO_VERSION=$VERSION_ID
    elif [ -f /etc/lsb-release ]; then
        # Read the distribution information from /etc/lsb-release
        . /etc/lsb-release
        DISTRO=$DISTRIB_ID
        DISTRO_VERSION=$DISTRIB_RELEASE
    elif [ -f /etc/debian_version ]; then
        DISTRO="Debian"
        DISTRO_VERSION=$(cat /etc/debian_version)
    elif [ -f /etc/redhat-release ]; then
        DISTRO=$(cat /etc/redhat-release)
        DISTRO_VERSION=$(cat /etc/redhat-release | grep -oP '\d+(\.\d+)?')
    else
        DISTRO="Unknown"
        DISTRO_VERSION="Unknown"
    fi
    echo "Detected Linux distribution: $DISTRO"
    echo "Detected distro version: $DISTRO_VERSION"
}

# Function to ask the user a yes/no question
ask_user() {
    while true; do
        read -p "$1 (Y/n): " yn
        yn=${yn:-yes}
        case $yn in
            [Yy] ) return 0;;
            [Nn] ) return 1;;
            * ) echo "Please answer yes or no.";;
        esac
    done
}

# Function to get the current user
get_current_user() {
    CURRENT_USER=$(whoami)
    echo "Current user: $CURRENT_USER"
}


### Code
# Execute the function to detect and print the distribution
detect_distro

# Execute the function to detect and print the current user
get_current_user

## Add secure github email to .gitconfig
if ask_user 'Do you want to add the noreply github email address to your gitconfig?'; then
        # If user answers yes, add the email to gitconfig
        git config --global user.email '171081467+blue-witcher@users.noreply.github.com'
        echo 'Added 171081467+blue-witcher@users.noreply.github.com to gitconfig'
fi

# Add user to wheel group (Necessary for sudo configuration)
if ask_user "Add user \"$CURRENT_USER\" to group \"wheel\"?"; then
        # If user answers yes, add the email to gitconfig
        sudo usermod -a -G wheel $CURRENT_USER
        echo "Added user \"$CURRENT_USER\" to group \"wheel\"."
fi

# Delete the plasma specific locale file so plasma uses the locales from /etc/locale.conf
rm ~/.config/plasma-localerc



# Additional section for openSUSE
if [ "$DISTRO" = "openSUSE Leap" ] || [ "$DISTRO" = "openSUSE Tumbleweed" ]; then
    echo "This is openSUSE. Performing openSUSE-specific tasks..."
    # Add openSUSE-specific commands here
    if ask_user "Do you want to install packages?"; then
        # If user answers yes, install the packages
        sudo zypper install opi fish zoxide fzf fzf-fish-integration fastfetch steam flatpak flatpak-remote-flathub rclone yt-dlp
    else
        echo "Not installing packages."
    fi
    ## Packman codecs
    # Ask if the user wants to install packman repo and codecs
    if ask_user "Do you want to enable the packman repo and install codecs?"; then
        # If user answers yes, install packman and codecs
        sudo opi codecs
        echo "Installed packman and codecs."
        echo "You may need to run \"zypper dup --from packman --allow-vendor-change\""
    else
        echo "Skipping packman and codecs."
    fi

    ## vscode
    # Ask if the user wants to install vscode from the obs
    if ask_user "Do you want to install vscode from the obs?"; then
        # Yes
        if "$DISTRO" = "openSUSE Tumbleweed"; then
            sudo zypper addrepo https://download.opensuse.org/repositories/devel:tools:ide:vscode/openSUSE_Tumbleweed/devel:tools:ide:vscode.repo
            sudo zypper refresh
            sudo zypper install code
        elif "$DISTRO" = "openSUSE Leap"; then
            zypper addrepo "https://download.opensuse.org/repositories/devel:tools:ide:vscode/$DISTRO_VERSION/devel:tools:ide:vscode.repo"
            zypper refresh
            zypper install code
        fi
    else
        echo "Skipping vscode."
    fi
fi

## Ask the user if he wants to install obsidian
if ask_user "Do you want to install ObsidianMD as flatpak?"; then
        # Yes
        flatpak install flathub md.obsidian.Obsidian
        echo "Installed ObsidianMD."
fi

## Ask the user if he wants to install vesktop
if ask_user "Do you want to install Vesktop? (Alternate discord client)"; then
        # Yes
        flatpak install flathub dev.vencord.Vesktop
        echo "Installed vesktop."
        echo "Remember to import your settings."
fi

## Ask if the user wants to restart and remind him that he needs to restart for the sudo configuration to work
if ask_user "Do you want to reboot now?"; then
        # Yes
        echo "Rebooting.."
        systemctl reboot
    else
        # No
        echo "Script done."
fi